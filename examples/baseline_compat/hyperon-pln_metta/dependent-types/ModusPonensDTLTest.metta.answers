+ '[' 0 -eq 1 ']'
+ echo 'Doing: timeout --foreground --kill-after=5 --signal=SIGINT 121 time metta /opt/logicmoo_workspace/packs_sys/logicmoo_opencog/MeTTa/vspace-metta/examples/baseline_compat/hyperon-pln_metta/dependent-types/ModusPonensDTLTest.metta'
Doing: timeout --foreground --kill-after=5 --signal=SIGINT 121 time metta /opt/logicmoo_workspace/packs_sys/logicmoo_opencog/MeTTa/vspace-metta/examples/baseline_compat/hyperon-pln_metta/dependent-types/ModusPonensDTLTest.metta
+ eval 'timeout --foreground --kill-after=5 --signal=SIGINT 121 time metta /opt/logicmoo_workspace/packs_sys/logicmoo_opencog/MeTTa/vspace-metta/examples/baseline_compat/hyperon-pln_metta/dependent-types/ModusPonensDTLTest.metta'
++ timeout --foreground --kill-after=5 --signal=SIGINT 121 time metta /opt/logicmoo_workspace/packs_sys/logicmoo_opencog/MeTTa/vspace-metta/examples/baseline_compat/hyperon-pln_metta/dependent-types/ModusPonensDTLTest.metta
[()]
[()]
["===== Test synthesizer ===="]
[(: cow_is_big (≞ (big cow) (STV 0.99 0.99)))]
[(: (ModusPonens cow_is_big x_is_big_chases_dog) (≞ (chase cow dog) (STV 0.9821 0.99))), (let* (((: $proof2#3383 (≞ (→ (need cow dog) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (need cow dog) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens cow_needs_dog $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99))))), (let* (((: $proof2#3383 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (see dog rabbit) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens dog_sees_rabbit $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99))))), (let* (((: $proof2#3383 (≞ (→ (chase rabbit cow) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (chase rabbit cow) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens rabbit_chases_cow $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99))))), (let* (((: $proof2#3383 (≞ (→ (chase rabbit dog) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (chase rabbit dog) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens rabbit_chases_dog $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99))))), (let* (((: $proof2#3383 (≞ (→ (big rabbit) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (big rabbit) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens rabbit_is_big $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99))))), (let* (((: $proof2#3383 (≞ (→ (see rabbit dog) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (see rabbit dog) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens rabbit_sees_dog $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99))))), (let* (((: $proof2#3383 (≞ (→ (→ (chase cow dog) (see cow rabbit)) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (→ (chase cow dog) (see cow rabbit)) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens cow_chases_dog_sees_rabbit $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99))))), (let* (((: $proof2#3383 (≞ (→ (→ (big $x#3474) (chase $x#3474 dog)) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) (synthesize (: $proof2#3383 (≞ (→ (→ (big $x#3474) (chase $x#3474 dog)) (chase cow dog)) (STV $ABs#3385 $ABc#3387))) kb rb Z))) (: (ModusPonens x_is_big_chases_dog $proof2#3383) (≞ (chase cow dog) (STV (+ (* $ABs#3385 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#3387 1) $ABc#3387 1) 0.99) (if (< $ABc#3387 1) $ABc#3387 1) 0.99)))))]
[(let* (((: $proof2#6908 (≞ (→ (→ (chase cow dog) (see cow rabbit)) (see cow rabbit)) (STV $ABs#6910 $ABc#6912))) (synthesize (: $proof2#6908 (≞ (→ (→ (chase cow dog) (see cow rabbit)) (see cow rabbit)) (STV $ABs#6910 $ABc#6912))) kb rb (S Z)))) (: (ModusPonens cow_chases_dog_sees_rabbit $proof2#6908) (≞ (see cow rabbit) (STV (+ (* $ABs#6910 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#6912 1) $ABc#6912 1) 0.99) (if (< $ABc#6912 1) $ABc#6912 1) 0.99))))), (let* (((: $proof2#6908 (≞ (→ (→ (big $x#7067) (chase $x#7067 dog)) (see cow rabbit)) (STV $ABs#6910 $ABc#6912))) (synthesize (: $proof2#6908 (≞ (→ (→ (big $x#7067) (chase $x#7067 dog)) (see cow rabbit)) (STV $ABs#6910 $ABc#6912))) kb rb (S Z)))) (: (ModusPonens x_is_big_chases_dog $proof2#6908) (≞ (see cow rabbit) (STV (+ (* $ABs#6910 0.99) (* 0.2 (- 1 0.99))) (if (< (if (< $ABc#6912 1) $ABc#6912 1) 0.99) (if (< $ABc#6912 1) $ABc#6912 1) 0.99))))), (: (ModusPonens (ModusPonens cow_is_big x_is_big_chases_dog) cow_chases_dog_sees_rabbit) (≞ (see cow rabbit) (STV 0.975859 0.99)))]
5.39user 0.01system 0:05.40elapsed 100%CPU (0avgtext+0avgdata 47088maxresident)k
0inputs+0outputs (0major+8487minor)pagefaults 0swaps
